name: CI
on:
  pull_request:
  push:
    branches: [main]

# Automatically stop old builds on the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -el {0}

jobs:
  pre-commit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659 # v0.8.1
        with:
          environments: default lint
      - name: pre-commit
        run: pixi run pre-commit-run --color=always --show-diff-on-failure

  pytest:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Passw0rd
        ports:
          - 1433:1433
    strategy:
      fail-fast: false
      matrix:
        environment: [py311, py312, py313]
        database: [sqlite, mssql, duckdb]
        include:
          - database: sqlite
            connection-string: sqlite:///test.sqlite3
          - database: mssql
            connection-string: mssql+pyodbc://sa:Passw0rd@localhost:1433/master?driver=ODBC+Driver+18+for+SQL+Server&Encrypt=no
          - database: duckdb
            connection-string: duckdb:///test.duckdb
    steps:
      - name: Checkout branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Install msodbcsql18
        if: matrix.database == 'mssql'
        run: sudo ACCEPT_EULA=Y apt-get install msodbcsql18 -y
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@ba3bb36eb2066252b2363392b7739741bb777659 # v0.8.1
        with:
          environments: ${{ matrix.environment }}
          activate-environment: true
      - name: Install repository
        run: pixi run postinstall
      - name: Run pytest
        run: pixi run test-coverage --color=yes
        env:
          DB_CONNECTION_STRING: ${{ matrix.connection-string }}
